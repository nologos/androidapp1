name: Android CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  APP_VERSION_NAME: ${{ vars.APP_VERSION_NAME }}
  CURRENT_COMMIT_APP_VERSION_NAME: $(cat app/build.gradle | grep versionCode | awk '{print $2}' | tr -d \"\")
  COMMIT_MSG_RECENT_CHANGES: ${{ github.event.head_commit.message }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: "11"
          distribution: "temurin"
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Decode keystore file from base64
        run: echo "${{ secrets.KEYSTORE_FILE }}" | base64 --decode > my.keystore

      - name: Sign APK
        run: jarsigner -verbose -sigalg SHA256withRSA -digestalg SHA-256 -keystore my.keystore -storepass ${{ secrets.KEYSTORE_PASSWORD }} -keypass ${{ secrets.KEYSTORE_PASSWORD }} app/build/outputs/apk/release/app-release-unsigned.apk ${{ secrets.KEY_ALIAS }}

      - name: Verify APK signature
        run: jarsigner -verify app/build/outputs/apk/release/app-release-unsigned.apk && mv app/build/outputs/apk/release/app-release-unsigned.apk app-release.apk

      - name: Upload APK
        uses: actions/upload-artifact@v2
        with:
          name: app-release
          path: app-release.apk

      - name: commit as new description
        run: echo ${{ env.COMMIT_MSG_RECENT_CHANGES }}

      - name: INFO - version names
        run: |
         echo "CD will not run unless the versions are the same"
         echo "APP_VERSION_NAME - $APP_VERSION_NAME"
         echo "CURRENT_COMMIT_APP_VERSION_NAME - $(cat app/build.gradle | grep versionCode | awk '{print $2}' | tr -d \"\")"
         echo ${{ env.APP_VERSION_NAME }}
         echo ${{ env.CURRENT_COMMIT_APP_VERSION_NAME }}

      - name: Deploy to Amazon appstore
        run: |
          if [ ${{ env.APP_VERSION_NAME == env.CURRENT_COMMIT_APP_VERSION_NAME }} ]; then
            echo "Deploying to Amazon appstore"
            python $GITHUB_WORKSPACE/amazonbuild/amazonCD.py --client_id ${{ secrets.AMZN_CLIENT_ID }} --client_secret ${{ secrets.AMZN_CLIENT_SECRET }} --app_id ${{ secrets.AMZN_APP_ID }} --local_apk_path app-release.apk --recent_changes ${{ env.COMMIT_MSG_RECENT_CHANGES}} --verbose --run
          else
            echo "Not deploying to Amazon appstore"
          fi